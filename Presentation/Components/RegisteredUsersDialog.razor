@using ClassRegistrationApplication2025.Application.DTOs
@using ClassRegistrationApplication2025.Application.UseCases

@inject GetRegisteredUsersUseCase GetRegisteredUsersUseCase

<MudDialog>
    <DialogContent>

        @if (isLoading)
        {
            <MudProgressCircular Indeterminate="true" />
        }
        else if (Users == null || !Users.Any())
        {
            <MudText>No registered users found.</MudText>
        }
        else
        {
            <MudPaper Class="p-4" Elevation="0">
                <MudList T="string" Dense="true" Class="w-100">
                    @foreach (var user in Users)
                    {
                        <MudListItem Text="@user.UserName" Icon="@Icons.Material.Filled.Person" />
                    }
                </MudList>
            </MudPaper>

        }
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Primary">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Guid ClassId { get; set; }

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    private List<RegisteredUsersDto> Users;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Users = await GetRegisteredUsersUseCase.ExecuteAsync(ClassId);
        }
        catch (Exception ex)
        {
            // You might want to handle errors or notify user here
        }
        finally
        {
            isLoading = false;
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
