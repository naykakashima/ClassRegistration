@using ClassRegistrationApplication2025.Application.DTOs
@using ClassRegistrationApplication2025.Domain.Enums
@using ClassRegistrationApplication2025.Infrastructure.Persistence.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@inject AuthenticationStateProvider AuthProvider
@inject IUserService UserService

<MudNavMenu>
    <!-- Always visible -->
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Dashboard</MudNavLink>
    <MudNavLink Href="/subjects" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MenuBook">Subjects</MudNavLink>
    <MudNavLink Href="/surveysavailable" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Quiz">My Surveys</MudNavLink>

    <!-- ClassManager and above -->
    @if (currentUser?.Role >= Role.ClassManager)
    {
        <MudNavGroup Title="Management" Icon="@Icons.Material.Filled.ManageAccounts">
            <MudNavLink Href="/surveys/mycreated" Icon="@Icons.Material.Filled.AssignmentReturned">Survey Responses</MudNavLink>
        </MudNavGroup>
    }

    <!-- SuperAdmin only -->
    @if (currentUser?.Role == Role.SuperAdmin)
    {
        <MudNavGroup Title="Admin Tools" Icon="@Icons.Material.Filled.AdminPanelSettings">
            <MudNavLink Href="/admin/roles" Icon="@Icons.Material.Filled.Security">Manage Roles</MudNavLink>
        </MudNavGroup>
    }
</MudNavMenu>

@code {
    private UserDto currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userId = authState.User.Identity?.Name?.Split('\\').Last();

        if (!string.IsNullOrEmpty(userId))
        {
            currentUser = await UserService.GetOrCreateCurrentUserAsync(userId);
        }
    }
}